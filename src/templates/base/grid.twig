{% macro error_block(errors) %}
  {% if errors %}
    <span class="help-block">
      <ul>
        {% for err in errors %}
          <li>{{ err }}</li>
        {% endfor %}
      </ul>
    </span>
  {% endif %}
{% endmacro %}

{% macro valida(valor, exp='==', compara) %}
    {% set arrExp = { '==':'==', '<=':'<=', '>=':'>=', '<>=':'<>', '<>':'<>', '!=':'!=' } %}
    {% set expres = attribute(arrExp,exp) %}
    {% if valor ~expres~ compara %}
    	{{ valor }}
    {% endif %} 
{% endmacro %}

{# 
//
// Grid
//
    'nome':'gridTeste',
    'dados': [], array com as informações a ser visualizadas
    'dTables':true, ??? Nao utilizada no momemento
    'options':{
        'height':200,// Tamanho maximo do grid em PX.
        'colunsHidden':[ 'id', 'id_os' ] // Nome da coluna para fica invisivel  (ultilizar somente quando não utiliza  gridSripts)
        'class':'table-custom', //Nome da class customizada para table,
        'click':'funcaoClick', // Nome da função a ser executada ao clickar na linha da tabela.
    },
    { //Paramentro para adicionar botao na ultima coluna "Ações",  (ultilizar somente quando não utiliza  gridSripts)
        {
            'title':'Download',
            'label':'<i class="fa fa-download"></i>', //Texto do botão ou icone
            'action':'donwload', //Nome do evento será executado ao clickar  ex:  $('#dtb_nometabela').on('donwload',function(e ,row ){ //sua ação aqui. })
            'class':'btn-success' // Clase do botão se visulizado
        },
    }
 #}
{% macro grid(nome, dados, dTables=null,options={'title':null,'search':null,'height':null,'colunsHidden':null,'class':'','click':null,'actionNew':null},btnActions={}) %}
{% import _self as grid %}
     <div>
        {% if options.title %}
            <div class="col-sm-10 col-xs-8 pull-left">             
                <h4>
                    {{ options.title|raw }}
                </h4>
            </div> 
        {% endif %}
        {% if options.search %}
            <div class="col-sm-2 col-xs-4 pull-right">            
                <div class="form-group">
                    <label class="sr-only"></label>
                    <div class="input-group">
                        <div class="input-group-addon"><i class="fa fa-search"></i></div>
                        <input type="text" id="psq_{{ nome }}" maxlength="20" class="form-control" placeholder="Pesquisa">
                    </div>
                </div>
            </div> 
        {% endif %}
        <div class="dataTable_wrapper col-xs-12" {% if options.height %} style="overflow: auto;max-height:{{options.height}}px;" {% endif %}>
            {% if dados %}
                <table id="dtb_{{ nome }}" style="font-size: 85%;" class="table table-striped table-bordered table-hover table-responsive table-condensed {{options.class}}" cellspacing="0" width="100%" border="1">
                    <thead>
                        <tr>{# get table headers from the table row #}
                        {% for row in dados.0|cast_to_array  %}
                            <th data-key="{{row.0}}" {% if row.0 in options.colunsHidden %}style="display:none;"{% endif %}>{{ row.0 | replace({'_': ' '})|upper }}</th>
                        {% endfor %}
                        {% if btnActions %}
                            <th>AÇÕES</th>
                        {% endif %}
                        </tr>
                    </thead>
                    <tbody>
                    {% for row in dados %}
                        <tr>
                            {% for key, value in row|cast_to_array %}
                                <td {% if value.0 in options.colunsHidden %}style="display:none;"{% endif %}>{{ value.1|raw }}</td>
                            {% endfor %}
                            {% if btnActions %}
                                <td>
                                    <div class="btn-group" role="group">
                                    {% for btn in btnActions %}
                                        {% set mostra = true %}
                                        {% if btn.valida %}
                                            {% set campo = attribute(row, btn.valida.campo) %}
                                            {% if campo == btn.valida.valor %}
                                                {% set mostra = false %}
                                            {% endif %}	
                                        {% endif %}
                                        {% if mostra %} 
                                            <button type="button" class="btn-action-grid btn btn-xs {{btn.class}}" title="{{btn.title}}" data-action="{{btn.action}}">{{btn.label |raw}}</button>                                                                           	
                                        {% endif %}
                                    {% endfor %}
                                    </div>
                                </td>
                            {% endif %}
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>                
                <script>
                    function rePage(){
                    }
                </script>
            {% else %}
                {% if options.actionNew %}
                    <div class="dt-buttons btn-group"><button class="btn btn-default" tabindex="0" onClick="{{ options.actionNew }}">
                        <span><b> <i class="fa fa-files-o"></i> Novo</b></span></button>
                    </div>
                {% endif %}
                <div class="alert alert-danger margin-top-5"><b>Sem Dados para Mostrar!</b></div>
                <script>
                    /*function rePage(){
                        location.reload();
                    }*/
                </script>
            {% endif %}
        </div>
        
        {% if options.search %}
        <script>
            require(['nzordAux'],function(){
                $('#psq_{{ nome }}').keyup(function(){
                    searchTable('psq_{{ nome }}','dtb_{{ nome }}');
                });   
            });
        </script>
        {% endif %}
    </div>
    {% if options.click %}
        <script>
            $(function(){
                $("#dtb_{{ nome }} tbody").on( 'click', function ( e) {
                    e.preventDefault()
                    setTimeout(function(){
                        {{ options.click }}
                    }, 200);
                });
            });
        </script>
    {% endif %}
    {% if btnActions %}
        <script>
            // Adicionar eventos no botoes actions.
            $(".btn-action-grid").click(function(e){
                var tr = $(this).closest('tr');
                var row = getJsonRow(tr);
                var action = $(this).data('action');

                $("#dtb_{{ nome }}").trigger(action,[row]);
            });
        </script>   
    {% endif %}
{% endmacro %}


{# 
//
//  Grid Datatable
//
    'nome':'gridTeste', // nome do grid a ser aplicado 
    'button':[
        {   
            'label':'<i class="fa fa-plus"></i> Novo', //Texto ou icone para aparecer no botão
            'link':"novo()" //Função a ser executada ao clickar no botão
        }
    ]
    'url': '/system/usuarios/gridJson' ,// Link para busca da informação em JSON
    'dados': [], array com as informações a ser visualizadas, passa somente 1 linha para montagem.
    'options':{ 
        'timeout':10, ??
        'interval':200, // Faz reflesh no tempo passado por paramentro em milisegundos
        'select':true, //Ativa para qualquer alteração em select no mesmo lugar passa falor para campo filtro.
        'btnFilter': true, //Ativa botão para limpa filtro. ele é ativado somente quando possui paramnetro &fill=true na url.
        'refreshExitModal':true, // faz reflesh ao fecha qualquer moda que implementa exitModal
        'order':[
            [0,'desc'] // Coluna tag e tipo de ordenação.
        ]
        'columnsDefs':[
            {
                'render':'minhafuncao',  //função de callback para tratar dados coluna
                'target':0 ou [0,1]     // Coluna que é para executar a ação.
                'type': 'date' ou 'num' ou 'num-fmt' ou 'html-num' ou 'html-num-fmt' ou 'html' ou 'string'
            }
        ]
    }
 #}

{% macro gridSripts(nome, button={}, url, dados, options={'timeout':false,'interval':false,'select':false,'btnFilter':false,'refreshExitModal':true,'order':null,'columnsDefs':null,'renderRow':null}) %}
   {% if dados %}
    <script>
        require(['datatableJS'],function(){
            $(document).ready(function() {
                $('#dtb_{{ nome }} tbody').empty();
                //Fix passa paramentro pela url.
                function createdUrl(){
                    var urlBase = "{{ url }}";
                    var query = window.location.search;
                    if(urlBase.indexOf('?') > -1){
                        query = '&'+query.replace('?','');
                    }
                    return urlBase+query; 
                }
                function clearFilter(){
                    var urlBase = "{{ url }}";
                    window.location.href = urlBase;
                }

                var table = $('#dtb_{{ nome }}').DataTable({
                    "language": { 
                        "url": "{{ base_url() }}/assets/coder-lrv--ndatatables/i18n/pt_BR.json"
                    },
                    "dom": 'Bfrtip',
                    "displayLength": 10,
                    "lengthChange": false,
                    "processing": true,
                    "serverSide": true,
                    "responsive": true,
                    "order": {{ options.order|default([[0,'desc']])|json_encode|raw}},
                    "info": true,
                    "select": { style: 'single' },
                    "deferRender": false,
                    "pageResize": true,
                    "filter": true,
                    "lengthMenu": [[10, 50, 100, 250, 500, 1000, -1], ['10 linhas', '50 linhas', '100 linhas', '250 linhas', '500 linhas', '1000 linhas', 'Todas']],
                    "ajax":{
                        url: createdUrl(),
                        type: "GET",
                        dataType: 'json',
                        error: function (res) {
                            if(res.status == 500){
                                var erro = res.responseJSON;
                                jsAlertBox('error','Erro ao buscar registros.',erro.message+"<pre style='width: 482px;height: 200px;'>"+res.responseText+"</pre>");
                            }else{
                                jsMensageBox("warning","normal","Sem Registros","Correspondente a Pesquisa: " + $(".dataTables_filter input").val(),"10000",450);
                                $(".dataTables_filter input").val("");
                            }
                        }
                    },	        
                    "buttons": [
                        {% if button %} 
                            {% for row in button %}
                                { text: '<b>{{ row.label |raw }}</b>', action: function ( e, dt, node, config ) { {{ row.link|raw }}; } },
                            {% endfor %}
                        {% endif %}
                        { extend: 'copy', text: '<u>C</u>opiar',key: { key: 'c', altKey: true} }
                        , 'csv','excel'
                        , { extend: 'pdfHtml5', orientation: 'landscape', pageSize: 'A4',customize : function(doc) {doc.pageMargins = [10, 10, 10,10 ]; }, }
                        , { extend: 'print', text: '<u>I</u>mprimir', orientation: 'landscape', pageSize: 'A4',key: { key: 'i', altKey: true},
                                    customize: function ( win ) {
                                        $(win.document.body).css( 'font-size', '10px' );                    
                                        $(win.document.body).find( 'table' ).addClass( 'compact' ).css( 'font-size', 'inherit' );
                                    } }
                        , { extend: 'colvis', text: '<u>V</u>isivel',key: { key: 'v', altKey: true} }
                        , { extend: 'pageLength', text: 'Registros' }
                        {% if options.btnFilter %}
                        , { text: '<b>Limpar Filtro</b>',className: 'btn-clerfilter', action: function ( e, dt, node, config ) { window.location="{{current_path()}}"}},
                        {% endif %}
                    ],
                    "columns": [
                        {% if dados %}
                            {% for row in dados.0|cast_to_array  %}
                                { "data": "{{ row.0 }}",
                                "name": "{{ row.0 }}"  },
                            {% endfor %}
                        {% endif %}
                    ],
                    "columnDefs":[
                        {% if options.columnsDefs %}
                            {% for row in options.columnsDefs  %}
                                {
                                    {% if row.action %}
                                        "render":{{row.action}} ,
                                    {% endif %}
                                    "targets":{{row.targets |json_encode|raw}} ,
                                    {% if row.type %}
                                       "type": {{row.type |json_encode|raw}} ,
                                    {% endif %}
                                }
                            {% endfor %}
                        {% endif %}
                    ],
                    "fnRowCallback" : function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                        {% if options.renderRow %}
                            {{ options.renderRow }}.bind(this)(nRow, aData, iDisplayIndex, iDisplayIndexFull);
                        {% endif %}
                    }
                });

                {% if options.order %}
                    setTimeout(function(){
                        table.order( {{ options.order|json_encode|raw}} ).draw();
                    },2000)
                {% endif %}
            });

            {% if options.select != false %}
                $('select').on('change', function () {
                    $('#dtb_{{ nome }}').DataTable().search( $(this).val(), true, false ).draw();	
                });
            {% endif %}
                    
            {% if options.timeout != false %}
                setTimeout(function(){ 
                    if( $('#dtb_{{ nome }}').length === 1 ){
                        $('#dtb_{{ nome }}').DataTable().draw();
                    }
                }, {{ options.timeout }});
            {% endif %}

            {% if options.interval != false %}
                setInterval(function(){ 
                    if( $('#dtb_{{ nome }}').length === 1 ){
                        $('#dtb_{{ nome }}').DataTable().draw();
                    }
                }, {{ options.interval }});
            {% endif %}
        });
        {% if options.refreshExitModal != false %}
            function onExitModal(response){
                if( $('#dtb_{{ nome }}').length === 1 ){
                    $('#dtb_{{ nome }}').DataTable().draw();
                }
            }
        {% endif %}
    </script>    
    {% endif %}
{% endmacro %}

{% macro ctMenuSripts(nome) %}
    <script>
        require(['contextMenu'],function(){
            $(document).ready(function() {
                $.contextMenu({
                    selector: ".selected", 
                    trigger: "left",
                    autoHide: false,
                    reposition: true, 
                    items: $.contextMenu.fromMenu( $('#{{ nome }}') ),
                    position: function(opt, x, y){
                        opt.$menu.css({top: (y - 1), left: (x - 1)});
                    }            		
                });
            });
        })
    </script>
{% endmacro %}

